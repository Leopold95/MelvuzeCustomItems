plugins {
    id 'java'
}

group = 'me.leopold95'
version = '0.1-BETA'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }

    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    //skin restorer
//    maven {
//        name 'codemc'
//        url 'https://repo.codemc.org/repository/maven-public/'
//    }

    //combat log x
    maven {
        name = 'sirblobman-public'
        url = 'https://nexus.sirblobman.xyz/public/'
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT"


    implementation files('libs/MelvuzeItemsLib.jar')
    implementation files('libs/SkinsRestorer.jar')
    // SkinsRestorer API
    //compileOnly 'net.skinsrestorer:skinsrestorer-api:15.0.14'

    //combat log x
    compileOnly 'com.github.sirblobman.api:core:2.9-SNAPSHOT'
    compileOnly 'com.github.sirblobman.combatlogx:api:11.4-SNAPSHOT'
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
